@import '../sass/main';

// Mixins
@mixin opacityBlock($opacity: 1) {
	> .kit-filtration-condition
		> .kit-filtration-condition__item-text:not(.kit-filtration-condition__item-text_edit):not(.kit-filtration-condition__item-text_linked-condition-edit) {
		opacity: $opacity;

		&:hover {
			opacity: 1;
		}
	}

	@include changeHorisontalBracketsOpacity($opacity);
	@include changeVerticalSmallBracketOpacity($opacity);
}

.kit-filtration-group {
	$self: &;
	position: relative;
	z-index: 3;
	min-height: $minHeight;
	margin: 0;
	padding: 0;
	box-sizing: border-box;

	&_read-only {
		.kit-filtration-group__label,
		.kit-filtration-group__label-line {
			cursor: default;
			pointer-events: none;
		}

		&#{$self}_no-label#{$self}_not-children {
			display: none;
		}
	}

	&_shaded {
		@include opacityBlock(0.3);

		> .kit-filtration-group__buttons {
			button {
				opacity: 0.3;

				&:hover {
					opacity: 1;
				}
			}
		}

		z-index: auto;
	}

	&_edit {
		@include opacityBlock();
		z-index: 4;

		.kit-filtration-group {
			z-index: 3;
		}

		&::before {
			content: "";
			position: absolute;
			top: 0;
			left: 0;
			display: block;
			width: calc(100% + #{$groupHoverMarginLeft});
			height: calc(100% + #{$groupHoverMarginTop});
			min-height: $minHeight;
			margin: #{-$groupHoverMarginTop} 0 0 #{-$groupHoverMarginLeft};
			background-color: $editColorBg;
			border-radius: 3px 0 0 3px;
			box-sizing: border-box;
			cursor: pointer;
		}

		> .kit-filtration-group__buttons {
			margin-left: 20px;
			outline: none;

			> .kit-filter-editor .kit-filter-editor__btn,
			> .kit-button {
				opacity: 1;
			}
		}

		> .kit-filtration-group__label-line_or,
		> .kit-filtration-group__label-line_and {
			.kit-filtration-group__label-text {
				margin-left: 2px;
				background-color: transparent;
				transform: translateX(-100%);

				&:hover {
					background-color: transparent;
				}
			}
		}

		> .kit-filtration-group__label-line_or {
			color: $orColorEdit;

			.kit-filtration-group__label-line-vertical {
				background-color: $orColorEdit;
			}

			@include changeHorisontalBracketsColor($orColorEdit);
			@include changeColorVerticalSmallBracket($orColorEdit);
		}

		> .kit-filtration-group__label-line_and {
			color: $andColorEdit;

			.kit-filtration-group__label-line-vertical {
				background-color: $andColorEdit;
			}

			@include changeHorisontalBracketsColor($andColorEdit);
			@include changeColorVerticalSmallBracket($andColorEdit);
		}

		> .kit-filtration-group {
			> .kit-filtration-group__label-line_hover_or {
				color: $orColorEdit;

				@include changeHorisontalBracketsColor($orColorEdit);

				.kit-filtration-group__label-text,
				.kit-filtration-group__label-line-vertical {
					background-color: $orColorEdit;
				}
			}

			> .kit-filtration-group__label-line_hover_and {
				color: $andColorEdit;

				@include changeHorisontalBracketsColor($andColorEdit);

				.kit-filtration-group__label-button,
				.kit-filtration-group__label-text,
				.kit-filtration-group__label-line-vertical {
					background-color: $andColorEdit;
				}

				.kit-filtration-group__label-text {
					color: #ffffff;
				}
			}
		}
	}

	&_not-children {
		min-height: $minHeight;

		&#{$self}_edit {
			margin-left: 30px;
		}

		> .kit-filtration-group__label-line_or,
		> .kit-filtration-group__label-line_and {
			.kit-filtration-group__label-text-height {
				margin-top: 4px;
				margin-right: -22px;
			}

			.kit-filtration-group__label-text-buttons {
				margin-right: -11px;
			}
		}
	}

	&_hover {
		cursor: pointer;

		@include opacityBlock();

		> .kit-filtration-group__label_hover_or {
			background-color: $hoverColorBg;
			color: $orColorEdit;

			& ~ .kit-filtration-group__label-line {
				color: $orColorEdit;

				@include changeHorisontalBracketsColor($orColorEdit);
				@include changeColorVerticalSmallBracket($orColorEdit);

				.kit-filtration-group__label-text,
				.kit-filtration-group__label-line-vertical {
					background-color: $orColorEdit;
				}
			}
		}

		> .kit-filtration-group__label_hover_and {
			background-color: $hoverColorBg;
			color: $andColorEdit;

			& ~ .kit-filtration-group__label-line {
				color: $andColorEdit;

				@include changeHorisontalBracketsColor($andColorEdit);
				@include changeColorVerticalSmallBracket($andColorEdit);

				.kit-filtration-group__label-text,
				.kit-filtration-group__label-line-vertical,
				.kit-filtration-group__label-line-horizontal {
					background-color: $andColorEdit;
					color: #ffffff;
				}
			}
		}

		> .kit-filtration-group__buttons {
			button {
				opacity: 1;
			}
		}
	}

	& > & .kit-filtration-group__label-line {
		&_or,
		&_and {
			.kit-filtration-group__label-line-horizontal {
				@include createHorisontalBrackets(-30px, 50%);
			}
		}
	}

	> .kit-filtration-condition {
		width: 100%;
		max-width: calc(100% - 30px);
		margin: 0;
		padding-left: 20px;
		box-sizing: border-box;

		@include createHorisontalBrackets(4px, 16px);

		.kit-filtration-group__buttons {
			margin-left: 20px;
		}
	}

	@include createVerticalSmallBracket;

	.kit-filter__btn {
		position: relative;
		margin-left: 20px;
		box-sizing: border-box;
	}
}

.kit-filtration-group__label {
	position: absolute;
	top: 0;
	left: -10px;
	z-index: 2;
	align-items: center;
	width: calc(100% + 10px);
	height: 1px;
	padding: 16px $groupLabelPaddingLeft;
	border-radius: 3px 0 0 3px;
	box-sizing: border-box;
	color: $braketColor;
	display: flex;

	& ~ .kit-filtration-group,
	& ~ .kit-filtration-condition {
		.kit-filtration-group__label {
			border-radius: 0 0 0 3px;
		}
	}

	& ~ ul {
		margin-left: 30px;
	}

	& ~ .kit-filtration-group_not-children.kit-filtration-group_edit {
		margin-left: 60px;
	}
}

.kit-filtration-group__label-line {
	position: absolute;
	left: 5px;
	z-index: 4;
	align-items: center;
	width: $borderWidthLine;
	margin-top: 0;
	margin-left: -1px;
	box-sizing: border-box;
	cursor: pointer;
	display: inline-flex;

	&_and {
		color: $andColor;

		@include changeHorisontalBracketsColor($andColor);
		@include changeColorVerticalSmallBracket($andColor);

		.kit-filtration-group__label-text,
		.kit-filtration-group__label-line-vertical {
			background-color: $andColor;
			color: $andColorEdit;
		}
	}

	&_or {
		color: $orColor;

		@include changeHorisontalBracketsColor($orColor);
		@include changeColorVerticalSmallBracket($orColor);

		.kit-filtration-group__label-text,
		.kit-filtration-group__label-line-vertical {
			background-color: $orColor;
		}
	}
}

.kit-filtration-group__label-line-vertical {
	position: absolute;
	left: 0;
	z-index: 3;
	align-items: center;
	width: $borderWidthLine;
	height: 100%;
	margin-top: 0;
	background-color: $braketColor;
	box-sizing: border-box;
	color: $braketColor;
	display: inline-flex;
}

.kit-filtration-group__label-text {
	position: absolute;
	left: 0;
	z-index: 1;
	justify-content: center;
	align-items: center;
	min-width: 26px;
	min-height: 16px;
	border-radius: 3px;
	box-sizing: border-box;
	font-family: 'PT Sans', sans-serif;
	font-size: 10px;
	line-height: 1;
	font-weight: bold;
	color: #ffffff;
	text-align: center;
	transform: translateX(-50%);
	display: inline-flex;
}

.kit-filtration-group__buttons {
	position: relative;
	z-index: 3;
	align-items: center;
	min-height: $minHeight;
	padding-right: 20px;
	outline: none;
	box-sizing: border-box;
	display: inline-flex;

	@include createHorisontalBrackets;

	> * {
		z-index: 2;
	}

	> *:not(:last-child) {
		margin-right: 5px;
	}

	&:not(&_no-children) {
		margin-left: 20px;
	}

	&_no-children {
		> * {
			z-index: 3;
		}

		&::before {
			position: absolute;
			top: 0;
			left: -10px;
			z-index: 3;
			width: calc(100% + 10px);
			height: 100%;
			content: '';
			display: block;
		}
	}
}

.kit-filtration-group__remove,
.kit-filtration-group__copy {
	justify-content: center;
	align-items: center;
	height: 100%;
	padding: 0;
	border: 0;
	outline: none;
	box-sizing: border-box;
	cursor: pointer;
	display: inline-flex;
	transition: background-color 0.15s ease-in-out;
}

.kit-filtration-group__remove {
	width: 34px;
	background-color: $removeColorBg;
	color: $removeColor;

	&:hover {
		background-color: darken($removeColorBg, 10%);
	}
}

.kit-filtration-group__copy {
	width: 36px;
	background-color: $copyColorBg;
	color: $copyColor;

	&:hover {
		background-color: darken($copyColorBg, 10%);
	}
}

.kit-filtration-group__label-button {
	padding-right: 0;
	padding-left: 0;
	background-color: transparent;
	border: 0;
	outline: none;
	box-sizing: border-box;
	font-family: 'PT Sans', sans-serif;
	font-size: 12px;
	line-height: 1;
	font-weight: 700;
	color: rgba(#ffffff, 0.25);
	cursor: pointer;

	&_active {
		color: #ffffff;
	}

	*:not(:last-child) {
		margin-right: 5px;
	}
}

.kit-filtration-group__close {
	position: absolute;
	top: 7px;
	right: 13px;
	z-index: 10;
	padding: 0;
	border: 0;
	outline: none;
	color: $closeColor;
	cursor: pointer;
	background: none;
	transition: color 0.15s ease-in-out;

	&:hover {
		color: $andColor;
	}
}

.kit-filtration-group__label-text-buttons {
	align-items: center;
	height: 22px;
	background-color: #ffffff;
	border-radius: 4px 0 0 4px;
	box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.25);
	box-sizing: border-box;
	display: flex;

	&_or {
		.kit-filtration-group__label-button {
			background-color: $orColorEdit;
		}
	}

	&_and {
		.kit-filtration-group__label-button {
			background-color: $andColorEdit;
		}
	}

	> *:not(:first-child) {
		margin-left: 1px;
	}

	> *:first-child {
		border-radius: 4px 0 0 4px;
	}

	.kit-filtration-group__label-button {
		height: 100%;
		margin-right: 0;
		padding: 0 6px 0 9px;
		font-size: 12px;
	}
}
