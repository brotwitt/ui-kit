// Colors
$hoverColorBg: #f5f8fa;
$editModeColorBg: #3875d7;
$removeColorBg: #ffeeeb;
$removeColor: #a12e1e;
$copyColorBg: $hoverColorBg;
$copyColor: #2d597d;
$linkedConditionEditModeColorBg: #fde487;

// Sizes
$itemHoverBorderRadius: 3px;
$groupHoverMarginTop: 0px;
$groupHoverMarginLeft: 10px;

.kit-filtration-condition {
	position: relative;
	font-family: "PT Sans", sans-serif;
	font-size: 14px;
	line-height: 19px;
	list-style: none;

	&_with-alert {
		color: $removeColor;
		font-weight: 700;
	}
}

.kit-filtration-condition__item-text {
	position: relative;
	display: inline-flex;
	align-items: center;
	padding: 3px 0 3px 0;
	margin-right: 5px;
	transition: color 0.15s ease-in-out;
	z-index: 2;

	&:hover:not(&_read-only) {
		> .kit-filtration-condition__content {
			background-color: $hoverColorBg;
			cursor: pointer;

			> .kit-filtration-condition__remove,
			> .kit-filtration-condition__copy {
				visibility: visible;
			}
		}

		> .kit-filtration-condition__drag-and-drop {
			display: flex;
		}
	}

	&::before {
		position: absolute;
		top: 0;
		left: 0;
		display: block;
		width: calc(100% + #{$groupHoverMarginLeft});
		height: calc(100% + #{$groupHoverMarginTop});
		min-height: 25px;
		margin: #{-$groupHoverMarginTop} 0 0 #{-$groupHoverMarginLeft};
		background-color: $hoverColorBg;
		border-radius: $itemHoverBorderRadius 0 0 $itemHoverBorderRadius;
		box-sizing: border-box;
		cursor: pointer;
	}

	.kit-filtration-condition__content {
		flex-wrap: wrap;
		display: inline-flex;
		align-items: center;
		min-height: 25px;
	}

	.kit-filtration-condition__content > span,
	b {
		position: relative;
		margin-right: 5px;
	}

	&_hover {
		& + .kit-filtration-group_hover {
			&::before {
				border-radius: 0 0 0 $itemHoverBorderRadius;
			}
		}
	}

	&_edit {
		border-radius: 0 $itemHoverBorderRadius + 1 $itemHoverBorderRadius + 1 0;
		color: #fff;

		&:hover:not(&_read-only) {
			.kit-filtration-condition__content {
				background-color: $editModeColorBg;
			}
		}

		.kit-filtration-condition__content {
			background-color: $editModeColorBg;
		}

		.kit-filtration-condition__drag-and-drop {
			display: flex;
			background-color: $editModeColorBg;
		}

		.kit-filtration-condition__remove,
		.kit-filtration-condition__copy {
			visibility: visible;
		}
	}

	&_linked-condition-edit {
		&::before {
			content: "";
			background-color: $linkedConditionEditModeColorBg;
			border-radius: $itemHoverBorderRadius $itemHoverBorderRadius 0 0;
		}

		.kit-filtration-condition__remove,
		.kit-filtration-condition__copy {
			display: none;
		}

		&:hover:not(&_read-only) {
			.kit-filtration-condition__drag-and-drop {
				display: none;
			}
		}

		& + .kit-filtration-group_edit {
			&::before {
				border-radius: 0 0 0 $itemHoverBorderRadius;
			}
		}
	}

	&_shaded {
		opacity: 0.3;

		&:hover {
			opacity: 1;
		}
	}

	> .kit-filtration-condition__content {
		> [class*="kit-segment"] {
			&:not(:last-of-type):not(.kit-segment-button-expand__popover) {
				margin-right: 10px;
			}
		}
	}

	.kit-segment-button-expand__popover {
		order: 1;
		width: 100%;
		margin-top: 0;
		cursor: default;
	}

	&_read-only {
		> .kit-filtration-condition__drag-and-drop,
		> .kit-filtration-condition__content > span,
		> .kit-filtration-condition__content > b {
			cursor: default;
			pointer-events: none;
			z-index: 0;
		}
	}
}

.kit-filtration-condition__drag-and-drop {
	position: absolute;
	top: 3px;
	right: 100%;
	display: none;
	align-items: center;
	justify-content: center;
	width: 5px;
	height: calc(100% - 6px);
	background-color: $hoverColorBg;
	border-radius: $itemHoverBorderRadius 0 0 $itemHoverBorderRadius;
}

.kit-filtration-condition__copy,
.kit-filtration-condition__remove {
	display: inline-flex;
	justify-content: center;
	align-items: center;
	width: 44px;
	height: 25px;
	margin-left: 2px;
	border: 0;
	z-index: 1;
	transition: background-color 0.15s ease-in-out;
	cursor: pointer;
	outline: none;
	visibility: hidden;
}

.kit-filtration-condition__copy {
	background-color: $copyColorBg;
	color: $copyColor;

	&:hover {
		background-color: darken($copyColorBg, 10%);
	}
}

.kit-filtration-condition__remove {
	border-radius: 0 $itemHoverBorderRadius $itemHoverBorderRadius 0;
	background-color: $removeColorBg;
	color: $removeColor;

	&:hover {
		background-color: darken($removeColorBg, 10%);
	}
}

.kit-filtration-condition__item-text__block-method-params {
	display: inline-flex;

	> *:not(:last-child) {
		margin-right: 10px;
	}
}
